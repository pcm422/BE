# FastAPI 애플리케이션 서버 그룹 정의 (업스트림)
upstream fastapiapp {
    # 백엔드 서버 주소 (Docker 서비스명 'app'의 8000번 포트)
    server app:8000;
}

# HTTP (80 포트) 서버 블록: HTTPS 리디렉션 및 ACME 챌린지 처리
server {
    listen 80;
    # 서비스할 도메인 이름 (실제 도메인으로 변경 필요)
    server_name joint.kozow.com;

    # Let's Encrypt (Certbot) 갱신용 경로 설정
    location /.well-known/acme-challenge/ {
        # Certbot 검증 파일 위치
        root /var/www/certbot;
    }

    # 나머지 모든 HTTP 요청 처리
    location / {
        # HTTPS로 영구 리디렉션 (301)
        return 301 https://$host$request_uri; # HTTPS 리디렉션 복원
        # proxy_pass http://fastapiapp; # 임시 프록시 제거 또는 주석 처리
    }
}

# HTTPS (443 포트) 서버 블록: SSL 처리 및 요청 프록시
server {
    listen 443 ssl; # <--- 'ssl' 키워드 복원
    # HTTP/2 활성화
    http2 on; # <--- 복원
    # 서비스할 도메인 이름 (실제 도메인으로 변경 필요)
    server_name joint.kozow.com;

    client_max_body_size 2M; # 최대 요청 본문 크기 (2MB)

    # === 보안 헤더 추가 === (SSL 설정 시 다시 활성화)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; 
    add_header X-Frame-Options "DENY"; 
    add_header X-Content-Type-Options "nosniff"; 
    # =====================

    # SSL 인증서 및 키 파일 경로 (Certbot 생성 경로)
    ssl_certificate /etc/letsencrypt/live/joint.kozow.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/joint.kozow.com/privkey.pem;
    # Certbot 권장 SSL 설정 파일 (주석 처리됨, 필요시 활성화)
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # Diffie-Hellman 파라미터 파일 경로 (Certbot 생성)
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # 정적 파일 서빙 설정 (필요시)
    location /static/ {
        # 실제 정적 파일이 위치한 경로 (Docker 볼륨 경로와 일치 필요)
        alias /app/static/;
    }

    # 미디어 파일 서빙 설정 (필요시)
    location /media/ {
        # 실제 미디어 파일이 위치한 경로
        alias /app/media/;
    }

    # 그 외 모든 HTTPS 요청 처리 (애플리케이션으로 프록시)
    location / {
        # 정의된 업스트림(fastapiapp)으로 요청 전달
        proxy_pass http://fastapiapp;
        # 프록시 관련 헤더 설정 (클라이언트 정보 백엔드 전달용)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}